{"version":3,"sources":["redux/cake/cakeTypes.js","redux/cake/cakeActions.js","components/CakeContainer.js","components/HooksCakeContainer.js","redux/cake/cakeReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["BUY_CAKE","buyCake","type","connect","state","numOfCakes","dispatch","props","onClick","HooksCakeContainer","useSelector","useDispatch","initialState","cakeReducer","action","store","createStore","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAaA,G,YAAW,YCEXC,EAAU,WACrB,MAAO,CACLC,KAAMF,I,cCWV,IAYeG,eAZS,SAACC,GACvB,MAAO,CACLC,WAAYD,EAAMC,eAIK,SAACC,GAC1B,MAAO,CACLL,QAAS,kBAAMK,EAASL,SAIbE,EAvBf,SAAuBI,GACrB,OACE,gCACE,gDACA,uBACA,oDAAuBA,EAAMF,cAC7B,wBAAQG,QAASD,EAAMN,QAAvB,6BCMSQ,MAZf,WACE,IAAMJ,EAAaK,aAAY,SAACN,GAAD,OAAWA,EAAMC,cAC1CC,EAAWK,cAEjB,OACE,gCACE,0DAA6BN,KAC7B,wBAAQG,QAAS,kBAAMF,EAASL,MAAhC,0B,cCTAW,EAAe,CACnBP,WAAY,IAgBCQ,EAbK,WAAmC,IAAlCT,EAAiC,uDAAzBQ,EAAcE,EAAW,uCACpD,OAAQA,EAAOZ,OACRF,EACI,2BACFI,GADL,IAEEC,WAAYD,EAAMC,WAAa,IAI1BD,GCVEW,EAFDC,YAAYH,GCgBXI,MAZf,WACE,OACE,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACE,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,UCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ba797a7d.chunk.js","sourcesContent":["export const BUY_CAKE = \"BUY_CAKE\";\r\n","import { BUY_CAKE } from \"./cakeTypes\";\r\n\r\nexport const buyCake = () => {\r\n  return {\r\n    type: BUY_CAKE,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { buyCake } from \"../redux/index\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction CakeContainer(props) {\r\n  return (\r\n    <div>\r\n      <p>Redux Cake Shop</p>\r\n      <hr />\r\n      <h2>Number of Cakes - {props.numOfCakes}</h2>\r\n      <button onClick={props.buyCake}>Buy Cakes</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    numOfCakes: state.numOfCakes,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    buyCake: () => dispatch(buyCake()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CakeContainer);\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { buyCake } from \"../redux\";\r\n\r\nfunction HooksCakeContainer() {\r\n  const numOfCakes = useSelector((state) => state.numOfCakes);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <h2>Hooks Number of Cakes - {numOfCakes}</h2>\r\n      <button onClick={() => dispatch(buyCake())}>Buy Cake</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HooksCakeContainer;\r\n","import { BUY_CAKE } from \"./cakeTypes\";\r\n\r\nconst initialState = {\r\n  numOfCakes: 10,\r\n};\r\n\r\nconst cakeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case BUY_CAKE:\r\n      return {\r\n        ...state,\r\n        numOfCakes: state.numOfCakes - 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cakeReducer;\r\n","import { createStore } from \"redux\";\r\nimport cakeReducer from \"./cake/cakeReducer\";\r\n\r\nconst store = createStore(cakeReducer);\r\n\r\nexport default store;\r\n","import \"./App.css\";\nimport CakeContainer from \"./components/CakeContainer\";\nimport HooksCakeContainer from \"./components/HooksCakeContainer\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <CakeContainer />\n        <hr />\n        <HooksCakeContainer />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}